<?php 
					/*
			 * For each lifegroups entry in values.php
			 */
				foreach ($lifegroups as $lifegroup) {
					$lfg = strtolower($lifegroup);
					echo '<label><input id="'  .$lfg.  '" value="'.$lfg.'" type="radio" class="" />&nbsp;'.$lifegroup.'</label><br />';
				}
			?>
			
			
			
public function createAccount() {
        $b = trim($_POST['branchname']);
        $f = trim($_POST['branchfrom']);
		$c = trim($_POST['branchcommonname']);

        $sql = "SELECT COUNT(username) AS theCount FROM marine_users WHERE username=:email";
        if ( $stmt = $this->_db->prepare($sql) ) {
            $stmt->bindParam(":email", $u, PDO::PARAM_STR);
            $stmt->execute();
            $row = $stmt->fetch();
            if($row['theCount']!=0) {
                return "<h2> Error </h2>" . "<p> Sorry, that email is already in use. " . "Please try again. </p>";
            }
            if ( !$this->sendVerificationEmail($u, $v) ) {
                return "<h2> Error </h2>" . "<p> There was an error sending your" . " verification email. Please " . "<a href='mailto:help@coloredlists.com'>contact " . "us</a> for support. We apologize for the " . "inconvenience. </p>";
            }
            $stmt->closeCursor();
        }

        $sql = "INSERT INTO marine_users(username, ver_code) VALUES(:email, :ver)";
        if ( $stmt = $this->_db->prepare($sql) ) {
            $stmt->bindParam(":email", $u, PDO::PARAM_STR);
            $stmt->bindParam(":ver", $v, PDO::PARAM_STR);
            $stmt->execute();
            $stmt->closeCursor();

            $userID = $this->_db->lastInsertId();
            $url = dechex($userID);

            /*
             * If the UserID was successfully
             * retrieved, create a default list.
             */
            $sql = "INSERT INTO marine_lists (UserID, ListURL) VALUES ($userID, $url)";
            if(!$this->_db->query($sql)) {
                return "<h2> Error </h2>" . "<p> Your account was created, but " . "creating your first list failed. </p>";
            } else {
                return "<h2> Success! </h2>" . "<p> Your account was successfully " . "created with the username <strong>$u</strong>." . " Check your email!";
            }
        } else {
            return "<h2> Error </h2><p> Couldn't insert the " . "user information into the database. </p>";
        }
    }
    
    
    
    
*************************    Make spaces to one only inside
    
    <?

$text = preg_replace('/\s+/', ' ', $text);

?>



*******************Table for fishes SQL

	CREATE TABLE mlf_fish (
        fid INT AUTO_INCREMENT PRIMARY KEY,
		fstatus TINYINT DEFAULT 1,
        falias VARCHAR(150) NOT NULL,
        
		fcname VARCHAR(150) NOT NULL,
		fothercnames VARCHAR(150) NOT NULL,
		ffamilycname VARCHAR(150) NOT NULL,
		
		fbinomialfirst VARCHAR(150) NOT NULL,
		fbinomiallast VARCHAR(150) NOT NULL,
		fclassification VARCHAR(150) NOT NULL,
		
		fsummary TEXT NOT NULL,
		fcontent TEXT NOT NULL,
		
		fjuvdistinct TINYINT DEFAULT 0,
		ffemdistinct TINYINT DEFAULT 0,
		
		fprimarycolors VARCHAR(150) NOT NULL,
		fsecondarycolors VARCHAR(150) NOT NULL,
		fpatternsmarks VARCHAR(150) NOT NULL,
		fgeneralshape VARCHAR(150) NOT NULL,
		
		fjuvprimarycolors VARCHAR(150) NOT NULL,
		fjuvsecondarycolors VARCHAR(150) NOT NULL,
		fjuvpatternsmarks VARCHAR(150) NOT NULL,
		fjuvgeneralshape VARCHAR(150) NOT NULL,
		
		ffemprimarycolors VARCHAR(150) NOT NULL,
		ffemsecondarycolors VARCHAR(150) NOT NULL,
		ffempatternsmarks VARCHAR(150) NOT NULL,
		ffemgeneralshape VARCHAR(150) NOT NULL,
				
		fsize SMALLINT NOT NULL,
		fbodyrings TINYINT NOT NULL,
			
		fheadshape VARCHAR(80) NOT NULL,
		fheadsizetobody VARCHAR(50) NOT NULL,
		
		fmouthshape VARCHAR(150) NOT NULL,
		fmouthposition VARCHAR(40) NOT NULL,
		fmouthsizetohead VARCHAR(40) NOT NULL,
		fmouthreltoeyes VARCHAR(30) NOT NULL,
		fmouthteethvis TINYINT NOT NULL,
		
		feyessizetohead VARCHAR(30) NOT NULL,
		feyesposition VARCHAR(30) NOT NULL,
		
		flaterallinesshape VARCHAR(100) NOT NULL,
		flaterallinespores TINYINT NOT NULL,
		
		foperculums VARCHAR(40) NOT NULL,
		fholes TINYINT DEFAULT 0,
		fslits TINYINT DEFAULT 0,
		
		fscalessize VARCHAR(40) NOT NULL,
		fscalestype VARCHAR(30) NOT NULL,
		flateralscales TINYINT NOT NULL,
		ftraversescalesover TINYINT NOT NULL,
		ftraversescalesunder TINYINT NOT NULL,
		fpredorsalscales TINYINT NOT NULL,
		
		fupperarmsrakers TINYINT NOT NULL,
		flowerarmsrakers TINYINT NOT NULL,
				
		fdorsalfinshape VARCHAR(150) NOT NULL,
		fdorsalfinspatterns VARCHAR(150) NOT NULL,
		fdorsalfinsplit TINYINT DEFAULT 0,
		fdorsalfinretractable TINYINT DEFAULT 0,
		fdorsalfinspines TINYINT NOT NULL,
		fdorsalfinrays TINYINT NOT NULL,
				
		fcaudalfinshape VARCHAR(150) NOT NULL,
		fcaudalfintype VARCHAR(30) NOT NULL,
		fcaudalfinpatterns VARCHAR(150) NOT NULL,
		fcaudalfinspines TINYINT NOT NULL,
		fcaudalfinrays TINYINT NOT NULL,
			
		fanalfinsshape VARCHAR(100) NOT NULL,
		fanalfinspatterns VARCHAR(150) NOT NULL,
		fanalfinsspines TINYINT NOT NULL,
		fanalfinsrays TINYINT NOT NULL,
		
		fpelvicfinsshape VARCHAR(40) NOT NULL,
		fpelvicfinspatterns VARCHAR(80) NOT NULL,
		fpelvicfinsspines TINYINT NOT NULL,
		fpelvicfinsrays TINYINT NOT NULL,
		fpelvicfinsclaspers TINYINT DEFAULT 0,
		fpelvicfinsfuseddisc TINYINT DEFAULT 0,
		
		fpectoralfinsshape VARCHAR(60) NOT NULL,
		fpectoralfinspatterns VARCHAR(80) NOT NULL,
		fpectoralfinsspines TINYINT NOT NULL,
		fpectoralfinsrays TINYINT NOT NULL,
		
		fadiposefin TINYINT DEFAULT 0,
		
		fabvertebraes SMALLINT NOT NULL,
		fcavertebraes VARCHAR(150) NOT NULL,
		
		fschoolingsize VARCHAR(60) NOT NULL,
		fschoolingdensity VARCHAR(60) NOT NULL,
		fmotion VARCHAR(150) NOT NULL,
		fdiet VARCHAR(150) NOT NULL,
		ffeeding VARCHAR(150) NOT NULL,
		ftimeactive VARCHAR(30) NOT NULL,
		
		fcourting TEXT NOT NULL,
		fspecialbehavior TEXT NOT NULL,
		
		fhabitat VARCHAR(60) NOT NULL,
		fhabitattype VARCHAR(40) NOT NULL,
		fmigratory TINYINT DEFAULT 0,
		fmigratorystart VARCHAR(20) NOT NULL,
		fmigratoryend VARCHAR(20) NOT NULL,
		
		foceans VARCHAR(150) NOT NULL,
		fseas VARCHAR(250) NOT NULL,
		fcontinents TEXT NOT NULL,
		fregions TEXT NOT NULL,
		fcountries TEXT NOT NULL,
		
		fimages VARCHAR(1000) NOT NULL,
		fimagesexternal VARCHAR(1000) NOT NULL,
		fvideos VARCHAR(1000) NOT NULL,
		fvideosexternal VARCHAR(1000) NOT NULL,
		
		ffishbaselink VARCHAR(200) NOT NULL,
		wikipedialink VARCHAR(200) NOT NULL,
		wormslink VARCHAR(200) NOT NULL,
		itislink VARCHAR(200) NOT NULL,
		
		fpageurl VARCHAR (150) NOT NULL,
		fmetadesc VARCHAR (200) NOT NULL,
		fmetakeys VARCHAR(200) NOT NULL,
				
		fcreated INT UNSIGNED NOT NULL,
		fmodified INT UNSIGNED NOT NULL,
		fusername VARCHAR(50) NOT NULL
);

fstatus, falias, fcname, fothercnames, ffamilycname, fbinomialfirst, 
fbinomiallast, fclassification, fsummary, fcontent, fjuvdistinct, 
ffemdistinct, fprimarycolors, fsecondarycolors, fpatternsmarks, 
fgeneralshape, fjuvprimarycolors, fjuvsecondarycolors, 
fjuvpatternsmarks, fjuvgeneralshape, ffemprimarycolors, 
ffemsecondarycolors, ffempatternsmarks, ffemgeneralshape, fsize, 
fbodyrings, fheadshape, fheadsizetobody, fmouthshape, fmouthpositionww, 
fmouthsizetohead, fmouthreltoeyes, fmouthteethvis, feyessizetohead, 
feyesposition, flaterallinesshape, flaterallinespores, foperculums, 
fholes, fslits, fscalessize, fscalestype, flateralscales, 
ftraversescalesover, ftraversescalesunder, fpredorsalscales, 
fupperarmsrakers, flowerarmsrakers, fdorsalfinshape, 
fdorsalfinspatterns, fdorsalfinsplit, fdorsalfinretractable, 
fdorsalfinspines, fdorsalfinrays, fcaudalfinshape, fcaudalfintype, 
fcaudalfinpatterns, fcaudalfinspines, fcaudalfinrays, fanalfinsshape, 
fanalfinspatterns, fanalfinsspines, fanalfinsrays, fpelvicfinsshape4, 
fpelvicfinspatterns, fpelvicfinsspines, fpelvicfinsrays, 
fpelvicfinsclaspers, fpelvicfinsfuseddisc, fpectoralfinsshape, 
fpectoralfinspatterns, fpectoralfinsspines, fpectoralfinsrays, 
fadiposefin, fabvertebraes, fcavertebraes, fschoolingsize, 
fschoolingdensity, fmotion, fdiet, ffeeding, ftimeactive, fcourting, 
fspecialbehavior, fhabitat, fhabitattype, fmigratory, fmigratorystart, 
fmigratoryend, foceans, fseas, fcontinents, fregions, fcountries, 
fimages, fimagesexternal, fvideos, fvideosexternal, ffishbaselink, 
wikipedialink, wormslink, itislink, fpageurl, fmetadesc, fmetakeys, 
fcreated, fmodified, fusername


	if (isset($_POST) && !empty($_POST)) {
			foreach ($_POST as $key => $value) {
				if (isset($value) && is_array($value)) {
					print_r($value)."<br />";
					$mkstr = join(", " , $value);
					$$key = $mkstr;
					echo "Key = ".$$key."<br />";
				}
			}
		}
		
		
CREATE TABLE mlf_fields (
        fieldID INT AUTO_INCREMENT PRIMARY KEY,
		fieldname VARCHAR(60) NOT NULL,
		fieldalias VARCHAR(60) NOT NULL,
        fielddescription TEXT NOT NULL,
        fieldgroup VARCHAR(30) NOT NULL,
        fieldtype VARCHAR(30) NOT NULL,
        fieldvaluetype VARCHAR(30) NOT NULL,
        fielddefaultvalue TEXT NOT NULL,
        created INT UNSIGNED NOT NULL,
        createdby VARCHAR(60) NOT NULL,
        modified INT UNSIGNED NOT NULL,
        modifiedby VARCHAR(60) NOT NULL   
)
        		
		

